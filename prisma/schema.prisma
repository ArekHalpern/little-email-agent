generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id                   String           @id
  auth_user_id         String           @unique
  email                String           @unique
  name                 String?
  google_access_token  String?
  google_refresh_token String?
  google_token_expiry  DateTime?
  createdAt            DateTime         @default(now())
  updatedAt            DateTime         @updatedAt
  EmailPrompt          EmailPrompt[]
  EmailSummary         EmailSummary[]
  EmailEmbedding       EmailEmbedding[]
  ChatMessage          ChatMessage[]
}

model EmailPrompt {
  id          String   @id
  name        String
  description String?
  prompt      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  customerId  String
  Customer    Customer @relation(fields: [customerId], references: [id])
}

model EmailSummary {
  id                 String   @id @default(uuid())
  emailId            String
  summary            Json     @db.JsonB
  checkedActionItems String[] @default([])
  customerId         String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  customer           Customer @relation(fields: [customerId], references: [id])

  @@unique([emailId, customerId])
}

model EmailEmbedding {
  id         String   @id @default(uuid())
  emailId    String   @unique
  content    String   @db.Text
  embedding  Json     @db.JsonB
  customerId String
  createdAt  DateTime @default(now())
  customer   Customer @relation(fields: [customerId], references: [id])
}

model ChatMessage {
  id         String   @id @default(uuid())
  emailId    String
  content    String   @db.Text
  role       String // 'user' or 'assistant'
  customerId String
  createdAt  DateTime @default(now())
  customer   Customer @relation(fields: [customerId], references: [id])
}
